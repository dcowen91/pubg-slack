/** Declaration file generated by dts-gen */

export class PubgAPI {
    constructor(...args: any[]);

    createKey(...args: any[]): void;

    handleCache(...args: any[]): void;

    makeHttpRequest(...args: any[]): void;

}

export const MATCH: {
    DEFAULT: string;
    DUO: string;
    SOLO: string;
    SQUAD: string;
};

export const REGION: {
    ALL: string;
    AS: string;
    EU: string;
    NA: string;
    OC: string;
    SA: string;
    SEA: string;
};

export const SEASON: {
    EA2017pre1: string;
    EA2017pre2: string;
    EA2017pre3: string;
    EA2017pre4: string;
};

export namespace PubgAPI {
    namespace prototype {
        function createKey(...args: any[]): void;

        function getAccountBySteamID(...args: any[]): void;

        function getProfileByNickname(...args: any[]): void;

        function handleCache(...args: any[]): void;

        function makeHttpRequest(...args: any[]): void;

    }

}

export namespace PubgAPIErrors {
    function EmptyApiKey(...args: any[]): void;

    function ProfileNotFound(...args: any[]): void;

    function StatsNotFound(...args: any[]): void;

    namespace EmptyApiKey {
        const stackTraceLimit: number;

        function captureStackTrace(p0: any, p1: any): any;

        namespace prototype {
            const message: string;

            const name: string;

            function toString(): any;

        }

    }

    namespace ProfileNotFound {
        const stackTraceLimit: number;

        function captureStackTrace(p0: any, p1: any): any;

        namespace prototype {
            const message: string;

            const name: string;

            function toString(): any;

        }

    }

    namespace StatsNotFound {
        const stackTraceLimit: number;

        function captureStackTrace(p0: any, p1: any): any;

        namespace prototype {
            const message: string;

            const name: string;

            function toString(): any;

        }

    }

}


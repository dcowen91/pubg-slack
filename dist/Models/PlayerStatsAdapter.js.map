{"version":3,"file":"PlayerStatsAdapter.js","sourceRoot":"","sources":["../../src/Models/PlayerStatsAdapter.ts"],"names":[],"mappings":"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","sourcesContent":["import {PlayerStats} from '../InterFaces/PlayerStats';\r\nimport {StatName} from '../Enums/StatName';\r\nimport {PubgStats} from '../InterFaces/PubgStats';\r\n\r\n// TODO this is not really an adapter, rename\r\nclass PlayerStatsAdapter\r\n{\r\n\tcurrentSeason = '2017-pre3';\r\n\tcurrentRegion = 'na';\r\n\tstatsCollection: PlayerStats;\r\n\r\n\tconstructor(stats: PlayerStats)\r\n\t{\r\n\t\tthis.statsCollection = stats;\r\n\t}\r\n\r\n\tprintStats(stats: [StatName]): string\r\n\t{\r\n\t\tlet str = '';\r\n\t\tconst lineLength = 25;\r\n\t\tfor (const i in this.statsCollection.Stats)\r\n\t\t{\r\n\t\t\tconst gameType = this.statsCollection.Stats[i];\r\n\t\t\tif (gameType.Region === this.currentRegion && gameType.Season === this.currentSeason)\r\n\t\t\t{\r\n\t\t\t\tstr += '*' + gameType.Match + '*:\\n';\r\n\t\t\t\tfor (const j in stats)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst commandDisplayString = this.formatDisplayValue(gameType.Stats[stats[j]]);\r\n\t\t\t\t\tconst currentLength = commandDisplayString.length;\r\n\t\t\t\t\tlet divider = '\\n';\r\n\t\t\t\t\tif ((j as any) % 2 === 0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst count = Math.floor((lineLength - currentLength) / 2) + 1;\r\n\t\t\t\t\t\tconsole.log(gameType.Stats[stats[j]].label + ' length: ' + currentLength);\r\n\t\t\t\t\t\tconsole.log('tab count: ' + count);\r\n\t\t\t\t\t\tconsole.log('total length for line:' + (count * 2 + currentLength));\r\n\t\t\t\t\t\tdivider = '\\t'.repeat(count);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstr += commandDisplayString + divider;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\treturn str;\r\n\t}\r\n\r\n\tprintStat(stat: StatName, secondaryStat?: StatName): string\r\n\t{\r\n\t\tlet str = '';\r\n\t\tfor (const i in this.statsCollection.Stats)\r\n\t\t{\r\n\t\t\tconst gameType = this.statsCollection.Stats[i];\r\n\t\t\tif (gameType.Region === this.currentRegion && gameType.Season === this.currentSeason)\r\n\t\t\t{\r\n\t\t\t\tconst detail = secondaryStat ? ' (' + this.formatDisplayValue(gameType.Stats[secondaryStat]) + ')' : '';\r\n\t\t\t\tstr += '*' + gameType.Match + '*: ' + this.formatDisplayValue(gameType.Stats[stat]) + detail + '\\n';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn str;\r\n\t}\r\n\r\n\tformatDisplayValue(statObject: PubgStats): string\r\n\t{\r\n\t\treturn statObject.displayValue + ' ' + statObject.label;\r\n\t}\r\n\r\n}\r\n\r\nexport default PlayerStatsAdapter;"]}
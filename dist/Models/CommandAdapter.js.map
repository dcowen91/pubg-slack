{"version":3,"file":"CommandAdapter.js","sourceRoot":"","sources":["../../src/Models/CommandAdapter.ts"],"names":[],"mappings":";;AACA,2CAAkD;AAClD,6DAAsD;AAEtD;IAIC,YAAY,GAAY;QAEvB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IAChB,CAAC;IAED,aAAa,CAAC,QAAgB,EAAE,WAAmB;QAKlD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,WAAwB;YAC1E,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,MAAM,OAAO,GAAG,IAAI,4BAAkB,CAAC,WAAW,CAAC,CAAC;YACpD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,MAAM,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACrB,KAAK,OAAO;oBACZ,CAAC;wBACA,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,oBAAQ,CAAC,MAAM,EAAG,oBAAQ,CAAC,YAAY,CAAC,CAAC;oBACnE,CAAC;gBACD,KAAK,IAAI,CAAC;gBACV,KAAK,KAAK;oBACV,CAAC;wBACA,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,oBAAQ,CAAC,cAAc,CAAC,CAAC;oBACnD,CAAC;gBACD,KAAK,MAAM;oBACX,CAAC;wBACA,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,oBAAQ,CAAC,IAAI,EAAE,oBAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC5D,CAAC;gBACD,KAAK,OAAO;oBACZ,CAAC;wBACA,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,oBAAQ,CAAC,MAAM,EAAE,oBAAQ,CAAC,UAAU,CAAC,CAAC;oBAChE,CAAC;gBACD;oBACC,KAAK,CAAC;YACR,CAAC;YACF,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,QAAQ,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IAkDJ,CAAC;CACD;AAED,kBAAe,cAAc,CAAC","sourcesContent":["import {PubgAPI} from 'pubg-api-redis';\r\nimport {PlayerStats, StatName} from './pubgStats';\r\nimport PlayerStatsAdapter from './PlayerStatsAdapter';\r\n\r\nclass CommandAdapter\r\n{\r\n\tapi: PubgAPI;\r\n\r\n\tconstructor(api: PubgAPI)\r\n\t{\r\n\t\tthis.api = api;\r\n\t}\r\n\r\n\thandleCommand(userName: string, commandText: string): Promise<string>\r\n\t{\r\n\t\t// TODO ALL THIS\r\n\r\n\t\t// if is valid command {}\r\n\t\tconsole.log('henlo');\r\n\t\treturn this.api.profile.byNickname(userName).then((playerStats: PlayerStats) => {\r\n\t\t\tconsole.log('henlo');\r\n\t\t\tconst adapter = new PlayerStatsAdapter(playerStats);\r\n\t\t\tconsole.log('henlo');\r\n\t\t\tswitch (commandText) {\r\n\t\t\t\tcase 'stats':\r\n\t\t\t\t{\r\n\t\t\t\t\treturn adapter.printStat(StatName.Rating,  StatName.RoundsPlayed);\r\n\t\t\t\t}\r\n\t\t\t\tcase 'kd':\r\n\t\t\t\tcase 'kdr':\r\n\t\t\t\t{\r\n\t\t\t\t\treturn adapter.printStat(StatName.KillDeathRatio);\r\n\t\t\t\t}\r\n\t\t\t\tcase 'wins':\r\n\t\t\t\t{\r\n\t\t\t\t\treturn adapter.printStat(StatName.Wins, StatName.WinRatio);\r\n\t\t\t\t}\r\n\t\t\t\tcase 'top10':\r\n\t\t\t\t{\r\n\t\t\t\t\treturn adapter.printStat(StatName.Top10s, StatName.Top10Ratio);\r\n\t\t\t\t}\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\treturn Promise.reject('not supported ' + userName);\r\n\t\t});\r\n\t\t// const result = 'not supported ' + userName;\r\n\t\t// switch (commandText) {\r\n\t\t// \tcase 'stats':\r\n\t\t// \t{\r\n\t\t// \t\treturn this.api.profile.byNickname(userName).then((playerStats: PlayerStats) => {\r\n\t\t// \t\t\tlet str = '';\r\n\t\t// \t\t\tfor (const i in playerStats.Stats)\r\n\t\t// \t\t\t{\r\n\t\t// \t\t\t\tconst gameType = playerStats.Stats[i];\r\n\t\t// \t\t\t\tif (gameType.Region === 'na')\r\n\t\t// \t\t\t\t{\r\n\t\t// \t\t\t\t\tconsole.log(StatName.Rating);\r\n\t\t// \t\t\t\t\tconsole.log(gameType.Stats[StatName.Rating]);\r\n\t\t// \t\t\t\t\tconsole.log(gameType.Stats[StatName.Rating].printDisplayValue);\r\n\t\t// \t\t\t\t\t// TODO format string\r\n\t\t// \t\t\t\t\tstr += '*' + gameType.Match + '*: ' + gameType.Stats[StatName.Rating].printDisplayValue() + ' (' + gameType.Stats[StatName.RoundsPlayed].printDisplayValue() + ')\\n';\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t}\r\n\t\t// \t\t\treturn str;\r\n\t\t// \t\t});\r\n\t\t// \t}\r\n\t\t// \tcase 'kd':\r\n\t\t// \tcase 'kdr':\r\n\t\t// \t{\r\n\t\t// \t\treturn this.api.profile.byNickname(userName).then((data) => {\r\n\t\t// \t\t\t// console.log(data.Stats);\r\n\t\t// \t\t\t// console.log(data.Stats[0].Stats);\r\n\t\t// \t\t\treturn '*' + data.Stats[0].Match + '*: ' + data.Stats[0].Stats[StatName.KillDeathRatio].printDisplayValue() + '(top ' + data.Stats[0].Stats[StatName.KillDeathRatio].percentile +  ')';\r\n\t\t// \t\t});\r\n\t\t// \t}\r\n\t\t// \tcase 'rating':\r\n\t\t// \t{\r\n\t\t// \t\tconsole.log('rating');\r\n\t\t// \t\tbreak;\r\n\t\t// \t}\r\n\t\t// \tcase 'wins':\r\n\t\t// \t{\r\n\t\t// \t\tconsole.log('wins');\r\n\t\t// \t\tbreak;\r\n\t\t// \t}\r\n\t\t// \tcase 'top10':\r\n\t\t// \t{\r\n\t\t// \t\tconsole.log('top10');\r\n\t\t// \t\tbreak;\r\n\t\t// \t}\r\n\t\t// \tdefault:\r\n\t\t// \t\tbreak;\r\n\t\t// }\r\n\t\t// return Promise.reject(result);\r\n\t}\r\n}\r\n\r\nexport default CommandAdapter;"]}